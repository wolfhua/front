<template>
  <div id="app">
    <div class="layui-container">
      <form class="layui-form layui-form-pane" action="">
        <div class="layui-form-item" :class="{ 'form-group--error': $v.name.$error }">
          <label class="layui-form-label">用户名</label>
          <div class="layui-input-inline">
            <input type="text" name="title" v-model.trim="$v.name.$model" placeholder="请输入标题" autocomplete="off" class="layui-input">
          </div>
          <div class="error layui-form-mid" v-if="!$v.name.required">用户名不能为空</div>
          <div class="error layui-form-mid" v-if="!$v.name.email">用户名格式为邮箱</div>
        </div>
        <div class="layui-form-item" :class="{ 'form-group--error': $v.password.$error }">
          <label class="layui-form-label">密码</label>
          <div class="layui-input-inline">
            <input type="password" name="password" v-model.trim="password" @input="setPassword($event.target.value)" placeholder="请输入密码" autocomplete="off" class="layui-input">
          </div>
          <div class="error layui-form-mid" v-if="!$v.name.required">密码不能为空</div>
        </div>
        <div class="layui-form-item">
          <label class="layui-form-label">验证码</label>
          <div class="layui-input-inline">
            <input type="text" name="title" v-model="code" required lay-verify="required" placeholder="请输入标题" autocomplete="off" class="layui-input">
          </div>
          <div class="layui-form-mid svg"
          @click="getCaptcha()"
          v-html="captcha"></div>
        </div>
        <button type="button" class="layui-btn">点击登录</button>
        <a class="simu-link" href="http://www.layui.com">忘记密码？</a>
      </form>
    </div>
  </div>
</template>
<script>
import axios from 'axios'
import { required, email } from 'vuelidate/lib/validators'
export default {
  name: 'app',
  data () {
    return {
      captcha: '',
      name: '',
      password: '',
      code: ''
    }
  },
  validations: {
    name: {
      required,
      email
    },
    password: {
      required
    },
    code: {
      required
    }
  },
  mounted () {
    this.getCaptcha()
  },
  methods: {
    setPassword (value) {
      this.password = value
      this.$v.password.$touch()
    },
    getCaptcha () {
      axios.get('http://localhost:3001/getCaptcha').then((res) => {
        if (res.status === 200) {
          const obj = res.data
          if (obj.code === 200) {
            this.captcha = obj.data
          }
        }
      })
    }
  }
}
</script>

<style lang="scss" scoped>
  #app{
    background-color: #f2f2f2;
  }
  .layui-container{
    background-color: #fff;
  }
  input{
    width: 190px;
  }
  .simu-link{
    margin-left: 10px;
    &:hover{
      color: #009688;
    }
  }
  .svg{
    position: relative;
    top: -15px;
  }
  .error{
    display: none;
  }
  .form-group--error{
    .error{
      display: block;
    }
  }
</style>
